{"version":3,"sources":["components/Admin/confirmedBeep/index.js","components/Admin/Modal/index.js","components/Admin/notConfirmedBeep/index.js","views/Admin/BeepList/index.js"],"names":["ConfirmedbeepItem","beep","makeRequest","useState","color","setColor","textColor","setTextColor","className","numero","note","style","background","onClick","_id","icon","faPhoneAlt","confirmed","id","Modal","showModals","setShowModal","modalRef","useRef","setNote","createPortal","e","current","target","ref","type","onChange","value","placeholder","document","getElementById","NotConfirmedbeepItem","Beeps","error","setError","beeps","setBeeps","confirmedSelected","setConfirmedSelected","pendingBeepsNumber","setPendingBeepsNumber","token","localStorage","getItem","socketRef","useEffect","getBeeps","offAny","io","on","data","change","message","a","getBeepsApi","then","filter","length","catch","err","beepId","request","emit","console","log","to","routes","superAdminHomePage","alt","src","disabled","map"],"mappings":"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","file":"static/js/4.6298782b.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPhoneAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./confirmed-beep.css\";\nimport React, { useState } from 'react';\n\nconst ConfirmedbeepItem = ({ beep, makeRequest }) => {\n  const [color,setColor]=useState('red');\n  const [textColor,setTextColor]=useState('white');\n    return (\n    <div className=\"confirmed-beep\">\n      <h1 className=\"confirmed-beep-number\">N°{beep.numero}</h1>\n      <div className=\"confirmed-beep-date\">\n        <p className=\"confirmed-beep-date-content\">Note :</p>\n        <p className=\"confirmed-beep-date-title\">\n          {beep.note ? beep.note : \"pas de note\"}\n        </p>\n      </div>\n\n      <button\n       style={{background:color,color:textColor}}    className=\"ml-auto confirmed-beep-call btn\"\n       onClick={()=>{setColor(\"red\");setTextColor('white');\n         makeRequest(beep._id, \"call\");\n       }}\n\n\n      >\n        <FontAwesomeIcon\n          className=\"confirmed-beep-call-icom\"\n          icon={faPhoneAlt}\n        />\n        Appeler\n      </button>\n\n      {!beep.confirmed && (\n        <button\n          onClick={() => {\n            makeRequest(beep._id, \"confirm\");\n          }}\n        >\n          Confirme\n        </button>\n      )}\n      <div\n        id=\"mdiv\"\n        className=\"btn\"\n        onClick={() => {\n          makeRequest(beep._id, \"delete\");\n        }}\n      >\n        <div className=\"mmdiv\">\n          <div className=\"mdiv\">\n            <div className=\"md\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfirmedbeepItem;\n","import React, { useRef, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport \"./modal.css\";\n\nexport const Modal = ({ showModals, setShowModal, makeRequest, beep }) => {\n  const modalRef = useRef();\n  const [note, setNote] = useState(beep.note);\n  const closeModal = (e) => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  return createPortal(\n    <>\n      {showModals ? (\n        <div className=\"modal-backgound\" onClick={closeModal} ref={modalRef}>\n          <div className=\"modal-form-wrapper\" showModals={showModals}>\n            <div className=\"notconfirmed-beep-container\">\n              <h1 className=\"notconfirmed-beep-number\">N°{beep.numero}</h1>\n              <button\n                className=\"notconfirmed-beep-confirm half-btn btn\"\n                onClick={() => {\n                  makeRequest(beep._id, \"confirm\");\n                  setShowModal(false);\n                }}\n              >\n                Accepter\n              </button>\n              <button\n                className=\"notconfirmed-beep-delete half-btn btn\"\n                onClick={() => {\n                  makeRequest(beep._id, \"delete\");\n                  setShowModal(false);\n                }}\n              >\n                Supprimer\n              </button>\n              <h6>Crée une note: </h6>\n              <input\n                type=\"textarea \"\n                onChange={(e) => setNote(e.target.value)}\n                placeholder=\"Note ici ...\"\n              />\n              <button\n                className=\"notconfirmed-beep-confirm btn\"\n                onClick={() => {\n                  makeRequest(beep._id, \"add-note\", note);\n                  setShowModal(false);\n                }}\n              >\n                Enregistrer\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>,\n    document.getElementById(\"modal\")\n  );\n};\n","import { useState } from \"react\";\nimport { Modal } from \"../Modal\";\nimport \"./not-confirmed-beep.css\";\n\nconst NotConfirmedbeepItem = ({ beep, makeRequest }) => {\n  const [showModals, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(!showModals);\n  };\n  return (\n    <>\n      <Modal\n        makeRequest={makeRequest}\n        showModals={showModals}\n        beep={beep}\n        setShowModal={setShowModal}\n      />\n      <div className=\"notconfirmed-beep\">\n        <div className=\"notconfirmed-beep-container\">\n          <h1 className=\"notconfirmed-beep-number\">N°{beep.numero}</h1>\n          {!beep.confirmed && (\n            <button\n              className=\"notconfirmed-beep-confirm btn\"\n              onClick={() => {\n                makeRequest(beep._id, \"confirm\");\n              }}\n            >\n              Accepter\n            </button>\n          )}\n\n          <button\n            className=\"notconfirmed-beep-delete btn\"\n            onClick={() => {\n              makeRequest(beep._id, \"delete\");\n            }}\n          >\n            Refuser\n          </button>\n\n          <button className=\"notconfirmed-beep-note btn\" onClick={openModal}>\n            Créer note\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default NotConfirmedbeepItem;\n","import \"./beeplist.css\";\nimport { useEffect, useState } from \"react\";\nimport { useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport { getBeepsApi } from \"../../../api/beep.api\";\nimport { Link } from \"react-router-dom\";\nimport ConfirmedbeepItem from \"../../../components/Admin/confirmedBeep\";\nimport NotConfirmedbeepItem from \"../../../components/Admin/notConfirmedBeep\";\nimport routes from \"../../../routes/superAdmin\";\n\nconst Beeps = () => {\n  const [error, setError] = useState(\"\");\n  const [beeps, setBeeps] = useState([]);\n  const [confirmedSelected, setConfirmedSelected] = useState(true);\n  const [pendingBeepsNumber, setPendingBeepsNumber] = useState(0);\n\n  const token = localStorage.getItem(\"token\");\n  const socketRef = useRef();\n\n  useEffect(() => {\n    getBeeps();\n    if (socketRef.current) socketRef.current.offAny();\n    socketRef.current = io(\"/\");\n    socketRef.current.on(\"snap\", (data) => {\n      const { change } = data;\n      switch (change) {\n        default:\n          getBeeps();\n          break;\n      }\n    });\n\n    socketRef.current.on(\"error\", (data) => {\n      setError(data?.message || \"Error from server\");\n    });\n  }, []);\n  const getBeeps = async () => {\n    await getBeepsApi(token)\n      .then((data) => {\n        setBeeps(data);\n        setPendingBeepsNumber(data.filter((e) => !e.confirmed).length);\n      })\n      .catch((err) => {\n        setError(err);\n      });\n  };\n\n  const makeRequest = (beepId, request, note = null) => {\n    if (!note) {\n      console.log(\"test\");\n      return socketRef.current.emit(request, { beepId, token });\n    }\n    return socketRef.current.emit(request, { beepId, token, note });\n  };\n\n  return (\n    <div className=\"restaurants-container\">\n      <div className=\"restaurants-content\">\n        <div className=\"super-admin\">\n          <div className=\"btn-back-container\">\n            <Link className=\"beep btn-back\" to={routes.superAdminHomePage}>\n              <img alt=\"loading\" src=\"../../img/btn-back.png\"></img>\n              <span>Retour</span>\n            </Link>\n          </div>\n          <div className=\"beeps-list-btn-items\">\n            <div\n              className={\n                \"beeps-list \" + (confirmedSelected ? \"active\" : \"pending\")\n              }\n            >\n              <div className=\"djdsfpds\">\n                <button\n                  className={\n                    \"btn beep-btn beep-btn-m \" +\n                    (confirmedSelected ? \"active\" : \"\")\n                  }\n                  disabled={confirmedSelected}\n                  onClick={() => setConfirmedSelected(true)}\n                >\n                  En cours\n                </button>\n                <div className=\"beeps-list-pending-btn-container\">\n                  {pendingBeepsNumber > 0 && (\n                    <div className=\"red-circle\">{pendingBeepsNumber}</div>\n                  )}\n                  <button\n                    className={\n                      \"btn beep-btn \" + (confirmedSelected ? \"\" : \"active\")\n                    }\n                    disabled={!confirmedSelected}\n                    onClick={() => setConfirmedSelected(false)}\n                  >\n                    En attente\n                  </button>\n                </div>\n              </div>\n\n              {error && <div>{error}</div>}\n              {!!beeps.length && (\n                <div className=\"beeps-list-items\">\n                  {beeps.map(\n                    (beep) =>\n                      beep.confirmed === confirmedSelected &&\n                      (beep.confirmed ? (\n                        <ConfirmedbeepItem\n                          key={beep._id}\n                          beep={beep}\n                          makeRequest={makeRequest}\n                        />\n                      ) : (\n                        <NotConfirmedbeepItem\n                          key={beep._id}\n                          beep={beep}\n                          makeRequest={makeRequest}\n                        />\n                      ))\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Beeps;\n"],"sourceRoot":""}